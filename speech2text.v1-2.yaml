openapi: 3.0.0
info:
  title: "RossaVoice's Speech2Text API"
  version: '1.0'
  contact:
    name: Rossa Team
    email: hy@cinnamon.is
  description: "This document describes API for speech-to-text engine of RossaVoice.\n\n\n\nA flow of speech-to-text is described as follow.\n\n\n- First, uploading the audio file to our server via `POST /api/files`\n- Second, adding a speech-to-text job by `POST /api/jobs`\n- Third, checking the process by `GET /api/jobs/{job_id}/status`\n- Fourth, once you receive progess \"transcribed\" from `GET \n/api/jobs/{job_id}/status`, you can get the result by `GET /api/jobs/{job_id}`\n- Finally, discard the job by `DELETE /api/jobs/{job_id}`\n\nNOTE: Account management would be provided on an `account-service`."
servers:
  - url: 'http://localhost:5000'
    description: rossa-service
  - url: 'http://localhost:5001'
    description: account-service
paths:
  '/api/jobs/{job_id}':
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    delete:
      summary: 5. Removing Job
      responses:
        '204':
          description: |-
            No Content
            Successfully delete job.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  _state:
                    type: string
                    default: ERR
                  _error:
                    type: object
                    required:
                      - code
                      - message
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                required:
                  - _state
                  - _error
              examples:
                example-400:
                  value:
                    _state: ERR
                    _error:
                      code: 404
                      message: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
      description: |-
        This API aims to remove:
        - finished job
        - running job
      operationId: delete-job-job_id
    get:
      summary: 4. Getting job
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - transcribing
                      - success
                  result:
                    type: array
                    description: Only available when status is `transcribed`
                    items:
                      type: object
                      properties:
                        start:
                          type: number
                          description: The start time of this transcript.
                        end:
                          type: number
                          description: The end time of this transcript.
                        speaker_number:
                          type: number
                          description: 'Speaker number talking from "start" to "end".'
                        transcript:
                          type: string
                          description: 'Transcript of "speaker_number" talking from "start" to "end".'
                      required:
                        - start
                        - end
                        - speaker_number
                        - transcript
                  number_conversion:
                    type: boolean
                  filler_tagging:
                    type: boolean
                  punctuation:
                    type: boolean
                  speaker_diarization:
                    type: boolean
                  _id:
                    type: string
                  _updated:
                    type: string
                  _created:
                    type: string
                  file_id:
                    type: string
                required:
                  - status
                  - result
                  - number_conversion
                  - filler_tagging
                  - punctuation
                  - speaker_diarization
                  - _id
                  - _updated
                  - _created
                  - file_id
              examples:
                example-200:
                  value:
                    _id: 5e735d3671870305ecf65ffd
                    file_id: 5e735d2e71870305ecf65ffc
                    speaker_diarization: false
                    number_conversion: true
                    punctuation: true
                    filler_tagging: false
                    _updated: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    _created: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    status: success
                    result:
                      - audio_path: assets/chiba0132-C.wav
                        start: 0.575
                        end: 4
                        transcript: でこないだ話なんですけど私の話ではなくもちろん
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  _state:
                    type: string
                    default: ERR
                  _error:
                    type: object
                    required:
                      - code
                      - message
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                required:
                  - _state
                  - _error
              examples:
                example-400:
                  value:
                    _state: ERR
                    _error:
                      code: 404
                      message: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
      requestBody: {}
      operationId: get-job-job_id
      description: Get the result of a transcribed speech2text job.
    operationId: get-removejob
  '/api/jobs/{job_id}/status':
    get:
      summary: 3. Getting job status
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  _updated:
                    type: string
                    format: date-time
                  _created:
                    type: string
                    format: date-time
                  status:
                    type: string
                required:
                  - _id
                  - _updated
                  - _created
                  - status
              examples:
                example-200:
                  value:
                    _id: 5e735d3671870305ecf65ffd
                    _updated: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    _created: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    status: success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  _error:
                    type: object
                    required:
                      - code
                      - message
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                  _state:
                    type: string
                    default: ERR
                required:
                  - _state
                  - _error
              examples:
                example-400:
                  value:
                    _error:
                      code: 404
                      message: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
                    _state: ERR
      operationId: get-job-job_id-status
      description: This API aims to check the job status of added job (`POST /api/jobs`).
      requestBody: {}
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
  /api/jobs:
    parameters: []
    post:
      summary: 2. Adding Speech2Text Job
      operationId: post-job
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _updated:
                    type: string
                    format: date-time
                  _created:
                    type: string
                    format: date-time
                  _id:
                    type: string
                  _state:
                    type: string
                    default: OK
                  file_id:
                    type: string
                  speaker_diarization:
                    type: boolean
                  punctuation:
                    type: boolean
                  filler_tagging:
                    type: boolean
                  number_conversion:
                    type: boolean
                  status:
                    type: string
                    default: transcribing
                    enum:
                      - transcribing
                      - success
                  file_name:
                    type: string
                required:
                  - _updated
                  - _created
                  - _id
                  - _state
                  - file_id
                  - speaker_diarization
                  - punctuation
                  - filler_tagging
                  - number_conversion
                  - status
              examples:
                example:
                  value:
                    _updated: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    _created: 'Thu, 19 Mar 2020 11:53:26 GMT'
                    _id: 5e735d3671870305ecf65ffd
                    _state: OK
                    file_id: 5e735d2e71870305ecf65ffc
                    speaker_diarization: false
                    number_conversion: true
                    punctuation: true
                    filler_tagging: false
                    status: transcribing
                    file_name: 5e735d2e71870305ecf65ffa_chiba0132-C.wav
        '422':
          description: |
            Unprocessable Entity (WebDAV)

            In such case:
              - `file_id` is invalid because uploaded file with `file_id` is unavailable on server.
              - any field is in wrong type.
              - lack of required field(s).
          content:
            application/json:
              schema:
                type: object
                properties:
                  _error:
                    type: object
                    required:
                      - code
                      - message
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                  _issues:
                    type: object
                    properties:
                      _exception:
                        type: string
                  _state:
                    type: string
                    default: ERR
                required:
                  - _state
                  - _error
              examples:
                example:
                  value:
                    _state: ERR
                    _issues:
                      speaker_diarization: required field
                    _error:
                      code: 422
                      message: 'Insertion failure: 1 document(s) contain(s) error(s)'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_id:
                  type: string
                  description: '`_id` of uploaded file which was returned when using `POST /api/file`. '
                speaker_diarization:
                  type: boolean
                  description: 'Speaker diarization mode which indicates "who spoke what"'
                punctuation:
                  type: boolean
                  description: Punctuation adding
                filler_tagging:
                  type: boolean
                  description: Displaying filler mark
                number_conversion:
                  type: boolean
                  description: Converting kanji number into romanji number
              required:
                - file_id
                - speaker_diarization
                - punctuation
                - filler_tagging
                - number_conversion
        description: ''
      description: This API aims to add a speech to text job with the uploaded file (done in `POST /api/files`).
  /api/files:
    post:
      summary: 1. Uploading audio file
      operationId: post-file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _updated:
                    type: string
                    format: date-time
                  _created:
                    type: string
                    format: date-time
                  _id:
                    type: string
                    description: id of uploaded file on server
                  _state:
                    type: string
                    default: OK
                required:
                  - _updated
                  - _created
                  - _id
                  - _state
              examples:
                example-201:
                  value:
                    _updated: 'Thu, 19 Mar 2020 11:53:18 GMT'
                    _created: 'Thu, 19 Mar 2020 11:53:18 GMT'
                    _id: 5e735d2e71870305ecf65ffc
                    _state: OK
        '422':
          description: |-
            Unprocessable Entity
            Uploaded file is not in expected format/MIME type  .
          content:
            application/json:
              schema:
                type: object
                properties:
                  _state:
                    type: string
                    default: ERR
                  _issues:
                    type: object
                    properties:
                      _exception:
                        type: string
                  _error:
                    type: object
                    required:
                      - code
                      - message
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                required:
                  - _state
                  - _error
              examples:
                example-422:
                  value:
                    _state: ERR
                    _issues:
                      exception: Unsupported MIME type text/plain
                    _error:
                      code: 422
                      message: 'Insertion failure: 1 document(s) contain(s) error(s)'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: object
              required:
                - file
            examples: {}
        description: "This is form-data body. \nIt only has one key namely \"file\" and the value is the audio file attachment."
      description: |-
        This API aims to upload the file into the server.
        It supports for `POST /api/jobs` API that we can call with the file id.
      parameters: []
    parameters: []
  /api/accounts:
    get:
      summary: List accounts
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _items:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        role:
                          type: string
                        expired_at:
                          type: string
                          description: admin and superuser accounts will not be expired
                        _created:
                          type: string
                        _updated:
                          type: string
                      required:
                        - _id
                        - username
                        - role
                  _meta:
                    type: object
                    properties:
                      page:
                        type: number
                      max_results:
                        type: number
                      total:
                        type: number
              examples:
                example-1:
                  value:
                    _items:
                      - _id: 5ea6a80afdcd174b1aec897f
                        username: ranma
                        role: admin
                        expired_at: 'Tue, 01 Jan 2030 00:00:00 GMT'
                        _created: 'Thu, 01 Jan 1970 00:00:00 GMT'
                        _updated: 'Thu, 01 Jan 1970 00:00:00 GMT'
                    _meta:
                      page: 1
                      max_results: 1
                      total: 2
      operationId: get-api-accounts
      description: 'Return all existing accounts can access rossa-service. '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Basic-Auth
        - schema:
            type: number
          in: query
          name: page
          description: 'pagination: page index (from 1)'
        - schema:
            type: number
          in: query
          name: max_results
          description: 'pagination: number of items'
      requestBody: {}
    post:
      summary: Create account
      operationId: post-api-accounts
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _created:
                    type: string
                  _updated:
                    type: string
                  _id:
                    type: string
                  _state:
                    type: string
                    default: OK
                required:
                  - _created
                  - _updated
                  - _id
                  - _state
        '422':
          description: |
            Unprocessable Entity.

            Message error can be found in `_issues` or `_error` (use `_error` when `_issues` is `null`)
          content:
            application/json:
              schema:
                type: object
                properties:
                  _state:
                    type: string
                  _issues:
                    type: object
                    properties:
                      '':
                        type: string
                  _error:
                    type: object
                    properties:
                      message:
                        type: string
                      code:
                        type: number
              examples:
                example-1:
                  value:
                    _state: ERR
                    _issues:
                      username: "value 'user12' is not unique"
                example-2:
                  value:
                    _state: ERR
                    _error:
                      code: 422
                      message: Cannot set expiration time for admin/superuser accounts.
      description: "Admin and superuser create new accounts.\n\nPermissions:\n\n  `admin` => `admin` | `superuser` | `user`\n  \n  `superuser` => `superuser` | `user`"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  pattern: '[a-zA-Z0-9]'
                password:
                  type: string
                  description: ''
                  format: password
                  minLength: 6
                days_to_expiration:
                  type: number
                  minimum: 0
                  description: only available for user account
                role:
                  type: string
                  enum:
                    - admin
                    - superuser
                    - user
              required:
                - username
                - password
                - role
  '/api/accounts/{account_id}':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: "Get account's info"
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  username:
                    type: string
                  role:
                    type: string
                  expired_at:
                    type: string
                    description: admin and superuser accounts will not be expired
                  _created:
                    type: string
                    format: date-time
                  _updated:
                    type: string
                    format: date-time
                required:
                  - _id
                  - username
                  - role
                  - _created
                  - _updated
              examples:
                example-1:
                  value:
                    _id: 5ea6a80afdcd174b1aec897f
                    username: ranma
                    role: admin
                    expired_at: 'Tue, 01 Jan 2030 00:00:00 GMT'
                    _created: 'Thu, 01 Jan 1970 00:00:00 GMT'
                    _updated: 'Thu, 01 Jan 1970 00:00:00 GMT'
      operationId: get-api-accounts-account_id
      description: |-
        Return account by `_id`.

        NOTE: can access account by using `username` instead of `_id`.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Basic-Auth
          required: true
      requestBody: {}
    patch:
      summary: Update account
      operationId: patch-api-accounts-account_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  _created:
                    type: string
                    format: date-time
                  _updated:
                    type: string
                    format: date-time
                  _state:
                    type: string
                    default: OK
              examples:
                example-1:
                  value:
                    _id: 5ea6bcc186d481e99a5779e2
                    _updated: 'Mon, 27 Apr 2020 16:36:36 GMT'
                    _created: 'Mon, 27 Apr 2020 11:06:41 GMT'
                    _state: OK
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    _state: ERR
                    _error:
                      code: 422
                      message: Cannot set expiration time for admin/superuser accounts.
                example-2:
                  value:
                    _issues:
                      password: min length is 6
                    _state: ERR
      description: "Admin and superuser update accounts: password, username, expiration.\n\nPermissions:\n\n  `admin` => `admin` | `superuser` | `user`\n  \n  `superuser` => `superuser` (owner only) | `user`"
    delete:
      summary: Delete account
      operationId: delete-api-accounts-account_id
      responses:
        '204':
          description: No Content
      description: "Admin and superuser delete accounts.\n\nPermissions:\n\n  `admin` => `admin` | `superuser` | `user`\n  \n  `superuser` => `superuser` (owner only) | `user`"
components:
  schemas: {}
